package com.epsilon.training.aop;
public class LoggerAspect {

	public LoggerAspect() {
//		log.info("LoggerAspect instantiated");
	}
	
	@Pointcut("execution (* com.epsilon..ProductDao.*(..))")
	public void pc1() {}
	
	@Pointcut("execution (* com.epsilon..ProductController.*(..))")
	public void pc2() {}
	// before advice
	@Before("pc1() || pc2()") //pointcut
	public void logBefore(JoinPoint jp) {
//		log.info("Entering {}, {} method with arguments.. {}",jp.getSignature().getDeclaringType,jp.getSignature().getName(), jp.getArgs(), jp.getKind());
	}
	
	@After("pc1() || pc2()")
	public void logAfter(JoinPoint jp) {
//		log.info("Exiting {} method ", jp.getSignature().getName());
	}
	
	// after advice
}